module dut(
	input clk,
	input [7:0] X,
	input [7:0] Y,
	output [15:0]P, 
	output [15:0]pp3,
	output [15:0]pp2, 
	output [15:0]pp1, 
	output [15:0]pp0, 
	output [8:0]decode_x, 
	output [2:0]g3, 
	output [2:0]g2, 
	output [2:0]g1, 
	output [2:0]g0, 
	output Cout
);

	always@(posdege clk)
		begin
			booth_multiplier_8bit bm(
				.X(X),
				.Y(Y),
				.P(P),
				.(pp3),
				.(pp2),
				.(pp1),
				.(pp0),
				.decode_x(decode_x),
				.g3(g3),
				.g2(g2),
				.g1(g1),
				.g0(g0),
				.Cout(Cout)
			);
		end
	

endmodule
